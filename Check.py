# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\egorc\Desktop\Check.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from fractions import Fraction as F
#from PyQt5.QtCore import pyqtSignal
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow
from PyQt5.QtGui import QPainter, QColor
#from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QLineEdit, \
    QLabel, QAction, QMainWindow, QStatusBar, QMenu, QMessageBox, qApp

class Ui_Form(object):
    g = 0
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(350, 600)
        Form.setStyleSheet("background-color: rgb(50, 157, 39);")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(30, 60, 40, 40))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setStyleSheet('font-size: 10pt')
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(30, 130, 40, 40))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setStyleSheet('font-size: 10pt')
        self.lineEdit_3 = QtWidgets.QLineEdit(Form)
        self.lineEdit_3.setGeometry(QtCore.QRect(130, 60, 40, 40))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_3.setStyleSheet('font-size: 10pt')
        self.lineEdit_4 = QtWidgets.QLineEdit(Form)
        self.lineEdit_4.setGeometry(QtCore.QRect(130, 130, 40, 40))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_4.setStyleSheet('font-size: 10pt')
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(20, 240, 150, 150))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(lambda ch, btn=self.pushButton: self.add_operation_sum(btn))
        self.pushButton.setStyleSheet('background: rgb(0,204,0);font-size: 24pt')
        #self.pushButton.clicked.connect(self.add_operation_sum)
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(180, 240, 150, 150))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(lambda ch, btn=self.pushButton_2: self.add_operation_sum(btn))
        self.pushButton_2.setStyleSheet('background: rgb(0,204,0);font-size: 24pt')
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setGeometry(QtCore.QRect(20, 400, 150, 150))
        self.pushButton_3.clicked.connect(lambda ch, btn=self.pushButton_3: self.add_operation_sum(btn))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.setStyleSheet('background: rgb(0,204,0);font-size: 24pt')
        self.pushButton_4 = QtWidgets.QPushButton(Form)
        self.pushButton_4.setGeometry(QtCore.QRect(180, 400, 150, 150))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(lambda ch, btn=self.pushButton_4: self.add_operation_sum(btn))
        self.pushButton_4.setStyleSheet('background: rgb(0,204,0);font-size: 24pt')
        self.pushButton_5 = QtWidgets.QPushButton(Form)
        self.pushButton_5.setGeometry(QtCore.QRect(180, 100, 43, 28))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.copy_1)
        self.pushButton_5.setStyleSheet('background: rgb(0,204,0);font-size: 18pt')
        #self.pushButton_5.clicked.connect(self.checking(F(ews)))
        self.lineEdit_6 = QtWidgets.QLineEdit(Form)
        self.lineEdit_6.setGeometry(QtCore.QRect(230, 60, 40, 40))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_6.setReadOnly(True)
        self.lineEdit_6.setStyleSheet("border-width: 3px; border-style: solid; border-color: rgb(0, 203, 0); font-size: 10pt")
        self.lineEdit_7 = QtWidgets.QLineEdit(Form)
        self.lineEdit_7.setGeometry(QtCore.QRect(230, 130, 40, 40))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_7.setReadOnly(True)
        self.lineEdit_7.setStyleSheet('font-size: 10pt')
        self.lineEdit_8 = QtWidgets.QLineEdit(Form)
        self.lineEdit_8.setGeometry(QtCore.QRect(90,90, 40, 40))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_8.setReadOnly(True)
        self.lineEdit_8.setFrame(False)
        self.lineEdit_8.setStyleSheet("border-width: 0px; font-size: 15pt")
        self.line_2 = QtWidgets.QFrame(Form)
        self.line_2.setGeometry(QtCore.QRect(30, 105, 40, 20))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line = QtWidgets.QFrame(Form)
        self.line.setGeometry(QtCore.QRect(130, 105, 40, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.retranslateUi(Form)
        self.line_3 = QtWidgets.QFrame(Form)
        self.line_3.setGeometry(QtCore.QRect(230, 105, 40, 20))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Fraction calculator"))
        self.pushButton.setText(_translate("Form", "+"))
        self.pushButton_2.setText(_translate("Form", "-"))
        self.pushButton_3.setText(_translate("Form", "*"))
        self.pushButton_4.setText(_translate("Form", "/"))
        self.pushButton_5.setText(_translate("Form", "="))


    def add_operation_sum(self,btn):
        global g
        g = btn.text()
        self.lineEdit_8.setText(str(g))
        print(g)
        return g
       # print(type(btn.text))
    def copy_1(self ):
        text = self.lineEdit.text()
        text_2 = self.lineEdit_2.text()
        text_3 = self.lineEdit_3.text()
        text_4 = self.lineEdit_4.text()
        first =f'{text}/{text_2}'
        second = f'{text_3}/{text_4}'
        print(type(first))
        print(second)
       # sum = self.pushButton
       # print(g)
        def fraction(self, first, second, operation):
            global ews
            first = F(first).limit_denominator(10)  # Переводим полученные значения в дроби и "округляем"
            second = F(second).limit_denominator(10)
            #print(operation)
            print(type(operation))
            if operation in ("+", '-', '*', '/'):  # Тут все просто, возвращаем результат нужной операции , например в переменную, сразу в строку.
                if operation == "+":
                    ews = first + second
                    self.lineEdit_6.setText(str(ews.numerator))
                    self.lineEdit_7.setText(str(ews.denominator))
                    return ews

                elif operation == '-':
                    ews = first - second
                    self.lineEdit_6.setText(str(ews.numerator))
                    self.lineEdit_7.setText(str(ews.denominator))
                    return first - second
                elif operation == '*':
                    ews = first * second
                    self.lineEdit_6.setText(str(ews.numerator))
                    self.lineEdit_7.setText(str(ews.denominator))
                    return first * second
                elif operation == '/':
                    ews = first / second
                    self.lineEdit_6.setText(str(ews.numerator))
                    self.lineEdit_7.setText(str(ews.denominator))
                    return first / second
        fraction(self, first, second, g)
StyleSheet = '''
    QLineEdit {
        border-width: 3px;
        border-style: solid;
        border-color: rgb(0, 203, 0);
    }
    QLineEdit:focus {
        border-color: rgb(255, 255, 0);
    }
'''
 #   def checking(self, res):
  #      if res.numerator > res.denominator:
   #         while res.numerator > res.denominator:
    #            find_whole_part = (res.numerator // res.denominator)
     #           find_numerator = res.numerator % res.denominator
      #          push_itog = str(find_whole_part) + ' ' + str(find_numerator) + '/' + str(res.denominator)
       #         # return push_itog
        #        # self.lineEdit_6.setText(push_itog)
         #       print(push_itog)
        #else:
         #   print(res)
#
 #       self.checking(self, ews)


   # checking(slef.copy_1(self.fraction(self, first, second, g)))
 # return str(res)







if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyleSheet(StyleSheet)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())


